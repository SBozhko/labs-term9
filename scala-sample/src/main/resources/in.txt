As detailed below, an actor object needs to be shielded from the outside in order to benefit from the actor model.
Therefore, actors are represented to the outside using actor references, which are objects that can be passed around freely and without restriction.
This split into inner and outer object enables transparency for all the desired operations:
restarting an actor without needing to update references elsewhere, placing the actual actor object on remote hosts,
sending messages to actors in completely different applications. But the most important aspect is that it is not possible t
o look inside an actor and get hold of its state from the outside, unless the actor unwisely publishes this information itself.